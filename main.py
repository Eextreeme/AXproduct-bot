'''
Telegram bot of AXproduct team and about project InSightWindow
'''
import telebot
from telebot import types


bot = telebot.TeleBot('6486600364:AAEhExDVIsh8LtkXmVei99m0FEEsPNYIBdg')


@bot.message_handler(commands=['start'])
def start(message):
    '''

    :param message:
    :return: procesing /start command
            Adding buttons under keyboard
    '''
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
    btn1 = types.KeyboardButton('–£—á–∞—Å–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥–∏')
    btn2 = types.KeyboardButton('–ü—Ä–æ –ø—Ä–æ–µ–∫—Ç InSightWindow')
    markup.row(btn1, btn2)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, —â–æ –≤–∞–º —Ü—ñ–∫–∞–≤–æ –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç <b>InSightWindow</b>',
                     parse_mode='HTML', reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    '''

    :param message:
    :return: Aswers on underkeyboard buttons
    '''

    if message.text == '–£—á–∞—Å–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥–∏':
        command_info(message)
    elif message.text == '–ü—Ä–æ –ø—Ä–æ–µ–∫—Ç InSightWindow':
        project_info(message)

    elif message.text.lower() == '–ø—Ä–∏–≤—ñ—Ç':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç <b>{message.from_user.first_name} '
                                          f'{message.from_user.last_name}</b>',
                         parse_mode='HTML')
        bot.send_message(message.chat.id, 'üëã')
    else:
        bot.send_message(message.chat.id, f'–©–æ—Å—å —è–≤–Ω–æ –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...', parse_mode='HTML')
        bot.send_message(message.chat.id, 'üò™')
@bot.message_handler(func=lambda message: True)
def command_info(message):
    '''

    :param message:
    :return: message buttons about command
    '''
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('A—Ä—Å–µ–Ω –ü–∞–≤–ª—é–∫: –¢—ñ–º–ª—ñ–¥', callback_data='pavluk_info'))
    markup.add(types.InlineKeyboardButton('A—Ä—Å–µ–Ω –®—É–ª–∞–∫: –ê–Ω–∞–ª—ñ—Ç–∏–∫', callback_data='shulak_info'))
    markup.add(types.InlineKeyboardButton('–Ü–≥–æ—Ä –°—É–º–µ–Ω–∫–æ–≤: –î–∏–∑–∞–π–Ω–µ—Ä', callback_data='igor_info'))
    markup.add(types.InlineKeyboardButton('–†–æ–º–∞–Ω –ü–∏–ª–∏–ø—Ü—ñ–≤:  –ü—Ä–æ–¥—É–∫—Ç –û–≤–Ω–µ—Ä',
                                          callback_data='roman_info'))
    markup.add(types.InlineKeyboardButton('–ú–∞–∫—Å–∏–º –í–∞—Ü–ª–∞–≤: –°–∫—Ä–∞–º –ú–∞–π—Å—Ç–µ—Ä',
                                          callback_data='waclaw_info'))
    bot.reply_to(message, '–û–±–µ—Ä—ñ—Ç—å –£—á–∞—Å–Ω–∏–∫–∞ –ö–æ–º–∞–Ω–¥–∏, —è–∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_message(callback):
    '''
    :param callback:
    :return: fucntion which callbacks inside message
    '''
    if callback.data == 'pavluk_info':
        bot.send_message(callback.message.chat.id,' <b>–ê—Ä—Å–µ–Ω –ü–∞–≤–ª—é–∫üßë‚Äçüíª</b>:', parse_mode='HTML' )
        ars = open('/Users/prabwa/Telegram-bots/AXproduct-bot/photos/Pavliuk.jpeg', 'rb')
        bot.send_photo(callback.message.chat.id, photo = ars)
        bot.send_message(callback.message.chat.id, '–í –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ —î –¢—ñ–º –õ—ñ–¥–µ—Ä,'
                                                   '\n–ó–Ω–∞—î –º–æ–≤—É C# —ñ Python,'
                                                   ' —Ä–æ–∑—É–º—ñ—î—Ç—å—Å—è –≤ Arduino. –ó–∞–ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø –ø—Ä–æ–µ–∫—Ç—É'
                                                   '\n<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:'
                                                   '\n–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞: arsenii.pavliuk.ir.2023@lpnu.ua',
                                                    parse_mode='HTML',
                                                    )
    elif callback.data == 'roman_info':
        bot.send_message(callback.message.chat.id,' <b>–†–æ–º–∞–Ω –ü–∏–ª–∏–ø—Ü—ñ–≤üßë‚Äçüíª</b>:', parse_mode='HTML')
        roma = open('/Users/prabwa/Telegram-bots/AXproduct-bot/photos/roman.jpeg', 'rb')
        bot.send_photo(callback.message.chat.id, photo = roma)
        bot.send_message(callback.message.chat.id, '–í –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ —î –ü—Ä–æ–¥—É–∫—Ç –û–≤–Ω–µ—Ä,'
                                                   ' \n–î–æ–±—Ä–µ –∑–Ω–∞—î –º–æ–≤—É Python, –∑–∞–ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–≤ —Ü—å–æ–≥–æ –±–æ—Ç–∞.'
                                                   ' –ù–∞–ø–∏—Å–∞–≤ —Ç–µ–∫—Å—Ç –¥–æ –≤–∏—Å—Ç—É–ø—É'
                                                   '\n<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:'
                                                   '\n—Ç–µ–ª–µ–≥—Ä–∞–º: @r_pylyptsiv '
                                                   '\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: +380995351702'
                                                   '\n–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞: romkapyl@gmail.com',
                                                    parse_mode='HTML',
                                                    )
    elif callback.data == 'waclaw_info':
        bot.send_message(callback.message.chat.id,' <b>–ú–∞–∫—Å–∏–º –í–∞—Ü–ª–∞–≤üí™</b>:', parse_mode='HTML' )
        #ars = open('/Users/prabwa/Telegram-bots/AXproduct-bot/photos/Pavliuk.jpeg', 'rb')
        #bot.send_photo(callback.message.chat.id, photo = ars)
        bot.send_message(callback.message.chat.id, '–í –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ —î –°–∫—Ä–∞–º –º–∞–π—Å—Ç–µ—Ä, '
                                                   '\n–†–æ–∑—Ä–æ–±–∏–≤ –º–∞–∫–µ—Ç, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞–≤ —ñ–¥–µ—é –ø—Ä–æ–µ–∫—Ç—É'
                                                   '\n<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:'
                                                   '\n—Ç–µ–ª–µ–≥—Ä–∞–º: @RowLinsee'
                                                   '\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: +380981731521',
                                                    parse_mode='HTML',
                                                    )
    elif callback.data == 'igor_info':
        bot.send_message(callback.message.chat.id,' <b>–Ü–≥–æ—Ä –°—É–º–µ–Ω–∫–æ–≤üë®‚Äçüé®</b>:', parse_mode='HTML')
        igor = open('/Users/prabwa/Telegram-bots/AXproduct-bot/photos/igor.jpeg', 'rb')
        bot.send_photo(callback.message.chat.id, photo = igor)
        bot.send_message(callback.message.chat.id, '–í –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ —î –î–∏–∑–∞–π–Ω–µ—Ä–æ–º'
                                                   '\n–†–æ–∑—Ä–æ–±–∏–≤ –ª–æ–≥–æ—Ç–∏–ø, –†–æ–±–∏–≤ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—é'
                                                   '\n<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:'
                                                   '\n—Ç–µ–ª–µ–≥—Ä–∞–º: @Ihorchu_k '
                                                   '\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: +380634683923  '
                                                    , parse_mode='HTML',
                                                    )
    elif callback.data == 'shulak_info':
        bot.send_message(callback.message.chat.id,' <b>–ê—Ä—Å–µ–Ω –®—É–ª–∞–∫üë®‚Äçüé®</b>:', parse_mode='HTML' )
        ars = open('/Users/prabwa/Telegram-bots/AXproduct-bot/photos/shulak.jpeg', 'rb')
        bot.send_photo(callback.message.chat.id, photo = ars)
        bot.send_message(callback.message.chat.id, '–í –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ —î –ê–Ω–∞–ª—ñ—Ç–∏–∫–æ–º, '
                                                   '\n–†–æ–±–∏–≤ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—é, –ø—Ä–æ–≤—ñ–≤ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è, –∑—Ä–æ–±–∏–≤ –ø–µ—Ä—à—É –≤–µ—Ä—Å—ñ—é –º–∞–∫–µ—Ç—É'
                                                   '\n<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:'
                                                   '\n–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞: arsen.shulak.ir.2024@lpnu.ua',
                                                    parse_mode='HTML',
                                                    )
    elif callback.data == 'get_presentation':
        get_presentation(callback.message)
    elif callback.data == 'get_feedback_photo':
        get_survey(callback.message)
    elif callback.data == 'more_info':
        bot.send_message(callback.message.chat.id, 'InSightWindow')
    elif callback.data == 'Get_test':
        bot.send_message(callback.message.chat.id, '–ó–∞—Ä–∞–∑ –±—É–¥–µ...')
def project_info(message):
    '''
    :param message:
    :return: message buttons about the project InSightWindow
    '''
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–û—Ç—Ä–∏–º–∞—Ç–∏ –í—ñ–¥–µ–æ —Ç–µ—Å—Ç—É –ø—Ä–æ—Ç–æ—Ç–∏–ø—É', callback_data='Get_test'))
    markup.add(types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç', callback_data='more_info'))
    markup.add(types.InlineKeyboardButton('–§–∞–π–ª –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—ó', callback_data='get_presentation'))
    markup.add(types.InlineKeyboardButton('–û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è', callback_data='get_feedback_photo'))
    bot.reply_to(message, '–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?', reply_markup=markup)

def get_presentation(message):
    '''

    :param message:
    :return: opens presetation file
    '''
    bot.reply_to(message, '–û—Å—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—è')
    file_path = './AXproduct_presentation.pptx'
    with open(file_path, 'rb') as file:
        bot.send_document(message.chat.id, file)

def get_survey(message):
    '''

    :param message:
    :return: opens survey file
    '''
    bot.reply_to(message, '–û—Å—å –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è')
    file_path = '/Users/prabwa/Telegram-bots/AXproduct-bot/photos/survey.png'
    with open(file_path, 'rb') as file:
        bot.send_photo(message.chat.id, file)

def get_test_video(message):
    pass

def get_project_info(message):
    bot.reply_to(message, 'InSightWindow')


bot.polling(non_stop=True)
